import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import java.util.Arrays;

public class CipherSuites {
    public static void main(String[] args) {
        try {
            // Create an SSLContext for TLS
            SSLContext sslContext = SSLContext.getInstance("TLS");
            sslContext.init(null, null, null);

            // Get the factory from the SSLContext
            SSLSocketFactory factory = sslContext.getSocketFactory();

            // Create a temporary socket to get enabled/supported ciphers
            try (SSLSocket socket = (SSLSocket) factory.createSocket()) {
                String[] supportedCiphers = socket.getSupportedCipherSuites();
                String[] enabledCiphers = socket.getEnabledCipherSuites();

                System.out.println("Supported Ciphers:");
                Arrays.stream(supportedCiphers).forEach(System.out::println);

                System.out.println("\nEnabled Ciphers:");
                Arrays.stream(enabledCiphers).forEach(System.out::println);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}



import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import java.util.Arrays;

public class SSLCheck {
    public static void main(String[] args) throws Exception {
        SSLSocketFactory factory = (SSLSocketFactory) SSLSocketFactory.getDefault();
        SSLSocket socket = (SSLSocket) factory.createSocket();
        System.out.println("Supported Protocols: " + Arrays.toString(socket.getSupportedProtocols()));
        System.out.println("Enabled Protocols: " + Arrays.toString(socket.getEnabledProtocols()));
        System.out.println("Supported Ciphers: " + Arrays.toString(socket.getSupportedCipherSuites()));
        System.out.println("Enabled Ciphers: " + Arrays.toString(socket.getEnabledCipherSuites()));
    }
}


-------
Check TLS Configuration: Use the JBoss CLI to inspect the HTTPS listenerâ€™s SSL context (assuming port 8443 is the default HTTPS listener):
./bin/jboss-cli.sh --connect
/subsystem=undertow/server=default-server/https-listener=https:read-resource(recursive=true)

Look for the security-realm or ssl-context attribute. If using Elytron, check the SSL context:
/subsystem=elytron/server-ssl-context=httpsSSC:read-resource



/subsystem=elytron/server-ssl-context=httpsSSC:write-attribute(name=cipher-suite,value="TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256")
/subsystem=elytron/server-ssl-context=httpsSSC:write-attribute(name=protocols,value=["TLSv1.2","TLSv1.3"])
:reload



Inspect Certificate: Use OpenSSL to view the certificate:
bash
openssl s_client -connect localhost:8443 -showcerts
