text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain
multipart/*;; x-java-content-handler=org.eclipse.angus.mail.handlers.multipart_mixed
-----------------
<?xml version="1.0" encoding="UTF-8"?>
<jaxb:bindings xmlns:jaxb="https://jakarta.ee/xml/ns/jaxb"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
               jaxb:extensionBindingPrefixes="xjc"
               version="3.0">

    <jaxb:globalBindings>
        <xjc:javaType name="java.lang.Boolean"
                      xmlType="xs:boolean"
                      adapter="com.example.todo.adapter.YesNoAdapter"/>
    </jaxb:globalBindings>
</jaxb:bindings>


---------------
<dependencies>
    <!-- SLF4J API -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.12</version>  <!-- Use latest version -->
    </dependency>

    <!-- SLF4J-JUL Bridge -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>2.0.12</version>
    </dependency>

    <!-- SLF4J JBoss LogManager Adapter -->
    <dependency>
        <groupId>org.jboss.slf4j</groupId>
        <artifactId>slf4j-jboss-logmanager</artifactId>
        <version>2.0.0.Final</version>
    </dependency>
</dependencies>


--------------

# Set the root logger level and appenders
log4j.rootLogger=INFO, CONSOLE, FILE

# Console Appender Configuration
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1} - %m%n

# File Appender Configuration
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=logs/application.log
log4j.appender.FILE.Append=true
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1} - %m%n

# Logger specific settings
log4j.logger.com.example=DEBUG, FILE
log4j.additivity.com.example=false

# Suppress unnecessary logs
log4j.logger.org.hibernate=ERROR
log4j.logger.org.springframework=WARN
----------------------------------
#!/bin/bash

# Array of directories containing Maven projects (add your project paths here)
PROJECTS=(
    "/path/to/project1"
    "/path/to/project2"
    "/path/to/project3"
)

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Function to run mvn clean install in a directory
run_maven() {
    local dir=$1
    echo -e "${GREEN}Running 'mvn clean install' in $dir${NC}"
    cd "$dir" || {
        echo -e "${RED}Failed to change to directory: $dir${NC}"
        return 1
    }
    
    mvn clean install
    local status=$?
    
    if [ $status -eq 0 ]; then
        echo -e "${GREEN}Successfully completed in $dir${NC}"
    else
        echo -e "${RED}Failed in $dir with status $status${NC}"
    fi
    
    return $status
}

# Main execution
echo "Starting Maven builds..."
echo "------------------------"

# Track overall success
overall_status=0

# Loop through projects
for project in "${PROJECTS[@]}"; do
    if [ -d "$project" ]; then
        run_maven "$project"
        if [ $? -ne 0 ]; then
            overall_status=1
        fi
    else
        echo -e "${RED}Directory not found: $project${NC}"
        overall_status=1
    fi
    echo "------------------------"
done

# Final status
if [ $overall_status -eq 0 ]; then
    echo -e "${GREEN}All builds completed successfully!${NC}"
else
    echo -e "${RED}Some builds failed.${NC}"
fi

exit $overall_status

